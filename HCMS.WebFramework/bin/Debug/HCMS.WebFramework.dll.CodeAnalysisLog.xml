<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="HCMS.WebFramework.Base.Handlers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Base.Handlers' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Base.Handlers' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Base.WebServices">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Base.WebServices' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Base.WebServices' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.BaseControls">
   <Messages>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.BaseControls' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.BasePages">
   <Messages>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.BasePages' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Common">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Common' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Common' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Controls.RadGrid">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Controls.RadGrid' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Controls.RadGrid' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.CustomControls">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.CustomControls' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.CustomControls' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Security">
   <Messages>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Security' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Security.Collections">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Security.Collections' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Security.Collections' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Serializers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Serializers' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Serializers' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Site.Builders">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Site.Builders' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Site.Builders' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Site.ConfigClasses">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Site.ConfigClasses' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Site.ConfigClasses' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Site.Sessions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Site.Sessions' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Site.Sessions' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Site.Utilities">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Site.Utilities' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Site.Utilities' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="HCMS.WebFramework.Site.Wrappers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'HCMS.WebFramework.Site.Wrappers' with another namespace.</Issue>
    </Message>
    <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'HCMS' in namespace name 'HCMS.WebFramework.Site.Wrappers' by changing it to 'Hcms'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\HCMS\HCMS.WebFramework\bin\Debug\HCMS.WebFramework.dll">
   <Modules>
    <Module Name="hcms.webframework.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'HCMS.WebFramework.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="HCMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'HCMS' in assembly name 'HCMS.WebFramework.dll' by changing it to 'Hcms'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'HCMS.WebFramework.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="HCMS.WebFramework.Base.Handlers">
       <Types>
        <Type Name="HandlerBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogExceptionOnly(System.Exception)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Base\Handlers" File="HandlerBase.cs" Line="14">In externally visible method 'HandlerBase.LogExceptionOnly(Exception)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogExceptionOnly(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Base\Handlers" File="HandlerBase.cs" Line="18">The 'this' parameter (or 'Me' in Visual Basic) of 'HandlerBase.LogExceptionOnly(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Base.WebServices">
       <Types>
        <Type Name="WebServiceBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogExceptionOnly(System.Exception)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Base\WebServices" File="WebServiceBase.cs" Line="14">In externally visible method 'WebServiceBase.LogExceptionOnly(Exception)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogExceptionOnly(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Base\WebServices" File="WebServiceBase.cs" Line="18">The 'this' parameter (or 'Me' in Visual Basic) of 'WebServiceBase.LogExceptionOnly(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.BaseControls">
       <Types>
        <Type Name="CreatePDUserControlBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CanCheckIn(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="194">Modify 'CreatePDUserControlBase.CanCheckIn(int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="181">In member 'CreatePDUserControlBase.CanCheckIn(int)', correct the casing of 'ID' in parameter name 'checkedOutByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanCheckOut(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CheckOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="122">The compound word 'CheckOut' in member name 'CreatePDUserControlBase.CanCheckOut(long)' exists as a discrete term. If your usage is intended to be single word, case it as 'Checkout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="153">Modify 'CreatePDUserControlBase.CanCheckOut(long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="122">In member 'CreatePDUserControlBase.CanCheckOut(long)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanContinueEdit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="172">Modify 'CreatePDUserControlBase.CanContinueEdit(int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="162">In member 'CreatePDUserControlBase.CanContinueEdit(int)', correct the casing of 'ID' in parameter name 'checkedOutByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckInPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="222">Modify 'CreatePDUserControlBase.CheckInPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="216">In member 'CreatePDUserControlBase.CheckInPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedInByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="216">In member 'CreatePDUserControlBase.CheckInPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckOutPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CheckOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="203">The compound word 'CheckOut' in member name 'CreatePDUserControlBase.CheckOutPositionDescription(long, int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Checkout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="209">Modify 'CreatePDUserControlBase.CheckOutPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="203">In member 'CreatePDUserControlBase.CheckOutPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedOutByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="203">In member 'CreatePDUserControlBase.CheckOutPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCareerLadderErrors(System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="106">Modify 'CreatePDUserControlBase.GetCareerLadderErrors(ref bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="70">Consider a design that does not require that 'hasCareerLadderErrors' be a reference parameter.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="99">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CreatePDUserControlBase.GetCareerLadderErrors(ref bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="100">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CreatePDUserControlBase.GetCareerLadderErrors(ref bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNextPDStatus()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="30">Change 'CreatePDUserControlBase.GetNextPDStatus()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetValidationErros(System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="52">Consider a design that does not require that 'hasErrors' be a reference parameter.</Issue>
            </Message>
            <Message Id="Erros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="52">Correct the spelling of 'Erros' in member name 'CreatePDUserControlBase.GetValidationErros(ref bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Text.StringBuilder.AppendFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="CreatePDUserControlBase.cs" Line="60">Because the behavior of 'StringBuilder.AppendFormat(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CreatePDUserControlBase.GetValidationErros(ref bool)' with a call to 'StringBuilder.AppendFormat(IFormatProvider, string, params object[])'. If the result of 'StringBuilder.AppendFormat(IFormatProvider, string, params object[])' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DashboardRoleUserControlBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DeleteDashboardRole(System.Int32,enumDashboardRoleType,System.Int32,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="200">Modify 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Dashboard" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In member 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the casing of 'Dashboard' in parameter name 'DashboardRoleID' by changing it to 'dashboard'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In member 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the casing of 'ID' in parameter name 'DashboardRoleID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In member 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the casing of 'ID' in parameter name 'iUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In member 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the casing of 'ID' in parameter name 'regionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="eroletype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In method 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the spelling of 'eroletype' in parameter name 'eroletype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In method 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the spelling of 'i' in parameter name 'iUserID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="orgcode" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="137">In method 'DashboardRoleUserControlBase.DeleteDashboardRole(int, enumDashboardRoleType, int, int, string)', correct the spelling of 'orgcode' in parameter name 'orgcode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSSASRoleManager()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="48">'DashboardRoleUserControlBase.GetSSASRoleManager()' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="SSAS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="15">Correct the casing of 'SSAS' in member name 'DashboardRoleUserControlBase.GetSSASRoleManager()' by changing it to 'Ssas'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'DashboardRoleUserControlBase.GetSSASRoleManager()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="27">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DashboardRoleUserControlBase.GetSSASRoleManager()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="15">Change 'DashboardRoleUserControlBase.GetSSASRoleManager()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSSASRoleNameForUser(HCMS.Business.Security.User,enumDashboardRoleType,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">In member 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)', correct the casing of 'ID' in parameter name 'regionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Organization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">In member 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)', correct the casing of 'Organization' in parameter name 'OrganizationCode' by changing it to 'organization'.</Issue>
            </Message>
            <Message Id="SSAS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">Correct the casing of 'SSAS' in member name 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)' by changing it to 'Ssas'.</Issue>
            </Message>
            <Message Id="eroletype" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">In method 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)', correct the spelling of 'eroletype' in parameter name 'eroletype' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">The 'this' parameter (or 'Me' in Visual Basic) of 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="regionID" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="100">Parameter 'regionID' of 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="120">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="103">In externally visible method 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)', validate parameter 'user' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="120">In externally visible method 'DashboardRoleUserControlBase.GetSSASRoleNameForUser(User, enumDashboardRoleType, int, string)', validate parameter 'OrganizationCode' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasRegionWideRole(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="78">In member 'DashboardRoleUserControlBase.HasRegionWideRole(int)', correct the casing of 'ID' in parameter name 'iUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="78">In method 'DashboardRoleUserControlBase.HasRegionWideRole(int)', correct the spelling of 'i' in parameter name 'iUserID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="78">The 'this' parameter (or 'Me' in Visual Basic) of 'DashboardRoleUserControlBase.HasRegionWideRole(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasServiceWideRole(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="58">In member 'DashboardRoleUserControlBase.HasServiceWideRole(int)', correct the casing of 'ID' in parameter name 'iUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="58">In method 'DashboardRoleUserControlBase.HasServiceWideRole(int)', correct the spelling of 'i' in parameter name 'iUserID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="DashboardRoleUserControlBase.cs" Line="58">The 'this' parameter (or 'Me' in Visual Basic) of 'DashboardRoleUserControlBase.HasServiceWideRole(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="enumMenuOption" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="enum" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'enum' in type name 'enumMenuOption' by changing it to 'Enum'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="enumNavigationMode" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="enum" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'enum' in type name 'enumNavigationMode' by changing it to 'Enum'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="enumValidationcode" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'enumValidationcode' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
          <Message Id="enum" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'enum' in type name 'enumValidationcode' by changing it to 'Enum'.</Issue>
          </Message>
          <Message Id="Validationcode" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Validationcode' in type name 'enumValidationcode'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JNPUserControlBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'JNP' in type name 'JNPUserControlBase' by changing it to 'Jnp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ClearCurrentJNP()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="475">Correct the casing of 'JNP' in member name 'JNPUserControlBase.ClearCurrentJNP()' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentCRID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="CRID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="253">Correct the casing of 'CRID' in member name 'JNPUserControlBase.CurrentCRID' by changing it to 'Crid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentFullPDID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="PDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="425">Correct the casing of 'PDID' in member name 'JNPUserControlBase.CurrentFullPDID' by changing it to 'Pdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJADutyID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="239">Correct the casing of 'ID' in member name 'JNPUserControlBase.CurrentJADutyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJAID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JAID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="206">Correct the casing of 'JAID' in member name 'JNPUserControlBase.CurrentJAID' by changing it to 'Jaid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJNP" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="160">Correct the casing of 'JNP' in member name 'JNPUserControlBase.CurrentJNP' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJNPAccessType" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="616">Correct the casing of 'JNP' in member name 'JNPUserControlBase.CurrentJNPAccessType' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJNPID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNPID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="186">Correct the casing of 'JNPID' in member name 'JNPUserControlBase.CurrentJNPID' by changing it to 'Jnpid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJNPWS" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNPWS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="397">Correct the casing of 'JNPWS' in member name 'JNPUserControlBase.CurrentJNPWS' by changing it to 'Jnpws'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJQFactorID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="324">Correct the casing of 'ID' in member name 'JNPUserControlBase.CurrentJQFactorID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJQFactorItemID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="360">Correct the casing of 'ID' in member name 'JNPUserControlBase.CurrentJQFactorItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJQFactorTypeID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="342">Correct the casing of 'ID' in member name 'JNPUserControlBase.CurrentJQFactorTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentJQID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JQID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="286">Correct the casing of 'JQID' in member name 'JNPUserControlBase.CurrentJQID' by changing it to 'Jqid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentKSAID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="KSAID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="379">Correct the casing of 'KSAID' in member name 'JNPUserControlBase.CurrentKSAID' by changing it to 'Ksaid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DutyCounters" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="79">Change 'JNPUserControlBase.DutyCounters' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="79">Change 'List&lt;JNPUserControlBase.DutyCounter&gt;' in 'JNPUserControlBase.DutyCounters' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJNPAccessType(HCMS.Business.JNP.JNPackage)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="621">Correct the casing of 'JNP' in member name 'JNPUserControlBase.GetJNPAccessType(JNPackage)' by changing it to 'Jnp'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="621">In member 'JNPUserControlBase.GetJNPAccessType(JNPackage)', correct the casing of 'JNP' in parameter name 'thisJNP' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJNPCurrentWorkflowStatusName(HCMS.Business.JNP.JNPackage)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="598">Correct the casing of 'JNP' in member name 'JNPUserControlBase.GetJNPCurrentWorkflowStatusName(JNPackage)' by changing it to 'Jnp'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="598">In member 'JNPUserControlBase.GetJNPCurrentWorkflowStatusName(JNPackage)', correct the casing of 'JNP' in parameter name 'thisJNP' by changing it to 'Jnp'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="600">In externally visible method 'JNPUserControlBase.GetJNPCurrentWorkflowStatusName(JNPackage)', validate parameter 'thisJNP' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJNPMenuOptionsForUser(HCMS.Business.JNP.JNPackage)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="643">In method 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="642">Change 'List&lt;enumMenuOption&gt;' in 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="642">Correct the casing of 'JNP' in member name 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)' by changing it to 'Jnp'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="642">In member 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)', correct the casing of 'JNP' in parameter name 'thisJNP' by changing it to 'Jnp'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="643">Be sure to set the DataTable Locale property wherever 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="649">In externally visible method 'JNPUserControlBase.GetJNPMenuOptionsForUser(JNPackage)', validate parameter 'thisJNP' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasActiveCR(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="DBase" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="702">In member 'JNPUserControlBase.HasActiveCR(bool)', the compound word 'DBase' in parameter name 'forceDBaseReload' exists as a discrete term. If your usage is intended to be single word, case it as 'Dbase' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InProcessJNPWorkflowStatuses" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="722">Correct the casing of 'JNP' in member name 'JNPUserControlBase.InProcessJNPWorkflowStatuses' by changing it to 'Jnp'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="722">The 'this' parameter (or 'Me' in Visual Basic) of 'JNPUserControlBase.InProcessJNPWorkflowStatuses' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="722">Change 'JNPUserControlBase.InProcessJNPWorkflowStatuses' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsKSA" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="KSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="418">Correct the casing of 'KSA' in member name 'JNPUserControlBase.IsKSA' by changing it to 'Ksa'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidCR()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="149">Modify 'JNPUserControlBase.IsValidCR()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidJA()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="124">Modify 'JNPUserControlBase.IsValidJA()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReloadCurrentJNP(System.Int64)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="497">In member 'JNPUserControlBase.ReloadCurrentJNP(long)', correct the casing of 'ID' in parameter name 'jnpID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="497">Correct the casing of 'JNP' in member name 'JNPUserControlBase.ReloadCurrentJNP(long)' by changing it to 'Jnp'.</Issue>
            </Message>
            <Message Id="jnp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="497">In method 'JNPUserControlBase.ReloadCurrentJNP(long)', correct the spelling of 'jnp' in parameter name 'jnpID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowEditFields(enumDocumentType)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="editableStatusList" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="JNPUserControlBase.cs" Line="750">'JNPUserControlBase.ShowEditFields(enumDocumentType)' declares a variable, 'editableStatusList', of type 'enumJNPWorkflowStatus[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NonExistentCREncountered" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonExistent" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonExistent' in member name 'JNPUserControlBase.NonExistentCREncountered' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonexistent' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'JNPUserControlBase.NonExistentCRHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'JNPUserControlBase.NonExistentCRHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'JNPUserControlBase.NonExistentCRHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NonExistentJAEncountered" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonExistent" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonExistent' in member name 'JNPUserControlBase.NonExistentJAEncountered' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonexistent' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'JNPUserControlBase.NonExistentJAHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'JNPUserControlBase.NonExistentJAHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'JNPUserControlBase.NonExistentJAHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JNPUserControlBase+DutyCounter" Kind="Struct" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'JNPUserControlBase.DutyCounter' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'JNPUserControlBase.DutyCounter' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#JADutyID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'JNPUserControlBase.DutyCounter.JADutyID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Number" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'JNPUserControlBase.DutyCounter.Number' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JNPUserControlBase+JNPAccessType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'JNP' in type name 'JNPUserControlBase.JNPAccessType' by changing it to 'Jnp'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JNPUserControlBase+NonExistentCRHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="NonExistent" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonExistent' in type name 'JNPUserControlBase.NonExistentCRHandler' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonexistent'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'JNPUserControlBase.NonExistentCRHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JNPUserControlBase+NonExistentJAHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="NonExistent" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonExistent' in type name 'JNPUserControlBase.NonExistentJAHandler' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonexistent'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'JNPUserControlBase.NonExistentJAHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OrgChartUserControlBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'CURRENTORGCHART' and 'CurrentOrgChart' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ClearCurrentOrgChartLog()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="40">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.ClearCurrentOrgChartLog()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChart" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="61">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.CurrentOrgChart' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CURRENTORGCHART" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="CURRENTORGCHART" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CURRENTORGCHART' in member name 'OrgChartUserControlBase.CURRENTORGCHART' by changing it to 'Currentorgchart'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChartID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="69">Correct the casing of 'ID' in member name 'OrgChartUserControlBase.CurrentOrgChartID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChartLog" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="26">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.CurrentOrgChartLog' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChartLogID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="34">Correct the casing of 'ID' in member name 'OrgChartUserControlBase.CurrentOrgChartLogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="34">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.CurrentOrgChartLogID' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChartNavMode" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Nav" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="114">Correct the spelling of 'Nav' in member name 'OrgChartUserControlBase.CurrentOrgChartNavMode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteOrgChart(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="93">In member 'OrgChartUserControlBase.DeleteOrgChart(int)', correct the casing of 'ID' in parameter name 'OrganizationChartID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Organization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="93">In member 'OrgChartUserControlBase.DeleteOrgChart(int)', correct the casing of 'Organization' in parameter name 'OrganizationChartID' by changing it to 'organization'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportToExcel(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="102">In method 'OrgChartUserControlBase.ExportToExcel(int)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="99">In member 'OrgChartUserControlBase.ExportToExcel(int)', correct the casing of 'ID' in parameter name 'OrganizationChartID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Organization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="99">In member 'OrgChartUserControlBase.ExportToExcel(int)', correct the casing of 'Organization' in parameter name 'OrganizationChartID' by changing it to 'organization'.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="102">Be sure to set the DataTable Locale property wherever 'OrgChartUserControlBase.ExportToExcel(int)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FinishEditOrgChart(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="87">In member 'OrgChartUserControlBase.FinishEditOrgChart(int, int)', correct the casing of 'ID' in parameter name 'OrganizationChartID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="87">In member 'OrgChartUserControlBase.FinishEditOrgChart(int, int)', correct the casing of 'ID' in parameter name 'UserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Organization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="87">In member 'OrgChartUserControlBase.FinishEditOrgChart(int, int)', correct the casing of 'Organization' in parameter name 'OrganizationChartID' by changing it to 'organization'.</Issue>
            </Message>
            <Message Id="User" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="87">In member 'OrgChartUserControlBase.FinishEditOrgChart(int, int)', correct the casing of 'User' in parameter name 'UserID' by changing it to 'user'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RefreshOrgChartLogDataOnly()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="50">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.RefreshOrgChartLogDataOnly()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetCurrentOrgChart(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="144">In member 'OrgChartUserControlBase.ResetCurrentOrgChart(int)', correct the casing of 'ID' in parameter name 'OrganizationChartID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Organization" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="144">In member 'OrgChartUserControlBase.ResetCurrentOrgChart(int)', correct the casing of 'Organization' in parameter name 'OrganizationChartID' by changing it to 'organization'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetCurrentOrgChartLog(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="45">In member 'OrgChartUserControlBase.ResetCurrentOrgChartLog(int)', correct the casing of 'ID' in parameter name 'organizationChartLogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="OrgChartUserControlBase.cs" Line="45">The 'this' parameter (or 'Me' in Visual Basic) of 'OrgChartUserControlBase.ResetCurrentOrgChartLog(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserControlBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CanViewReportsWithPhoneNumber(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="701">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserControlBase.CanViewReportsWithPhoneNumber(bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="701">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'UserControlBase.CanViewReportsWithPhoneNumber(bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckInCLPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="926">Modify 'UserControlBase.CheckInCLPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="920">In member 'UserControlBase.CheckInCLPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedInByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="920">In member 'UserControlBase.CheckInCLPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckInPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="913">Modify 'UserControlBase.CheckInPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="907">In member 'UserControlBase.CheckInPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedInByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="907">In member 'UserControlBase.CheckInPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckOutCLPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="CheckOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="894">The compound word 'CheckOut' in member name 'UserControlBase.CheckOutCLPositionDescription(long, int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Checkout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="900">Modify 'UserControlBase.CheckOutCLPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="894">In member 'UserControlBase.CheckOutCLPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedOutByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="894">In member 'UserControlBase.CheckOutCLPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckOutPositionDescription(System.Int64,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="CheckOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="881">The compound word 'CheckOut' in member name 'UserControlBase.CheckOutPositionDescription(long, int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Checkout' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="887">Modify 'UserControlBase.CheckOutPositionDescription(long, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="881">In member 'UserControlBase.CheckOutPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'checkedOutByID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="881">In member 'UserControlBase.CheckOutPositionDescription(long, int)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentActionRecID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="775">Correct the casing of 'ID' in member name 'UserControlBase.CurrentActionRecID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentAssociatedPDID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="PDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="131">Correct the casing of 'PDID' in member name 'UserControlBase.CurrentAssociatedPDID' by changing it to 'Pdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentGoBackPDID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="PDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="145">Correct the casing of 'PDID' in member name 'UserControlBase.CurrentGoBackPDID' by changing it to 'Pdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentGroupID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="719">Correct the casing of 'ID' in member name 'UserControlBase.CurrentGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentNavMode" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Nav" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="512">Correct the spelling of 'Nav' in member name 'UserControlBase.CurrentNavMode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPD" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="124">The 'this' parameter (or 'Me' in Visual Basic) of 'UserControlBase.CurrentPD' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPDDutyID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="581">Correct the casing of 'ID' in member name 'UserControlBase.CurrentPDDutyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPDID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="PDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="112">Correct the casing of 'PDID' in member name 'UserControlBase.CurrentPDID' by changing it to 'Pdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPermissions" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="185">Change 'UserControlBase.CurrentPermissions' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="185">Change 'PermissionCollection' in 'UserControlBase.CurrentPermissions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentSODFullPerformancePD" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="SOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="159">Correct the casing of 'SOD' in member name 'UserControlBase.CurrentSODFullPerformancePD' by changing it to 'Sod'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentStaffingObjectTypeID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="747">Correct the casing of 'ID' in member name 'UserControlBase.CurrentStaffingObjectTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentStatusID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="761">Correct the casing of 'ID' in member name 'UserControlBase.CurrentStatusID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentUserDashboardRoles()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="485">Change 'List&lt;DashboardRole&gt;' in 'UserControlBase.CurrentUserDashboardRoles()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentUserID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="458">Correct the casing of 'ID' in member name 'UserControlBase.CurrentUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentWorkflowRuleID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="733">Correct the casing of 'ID' in member name 'UserControlBase.CurrentWorkflowRuleID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DiffCompareStrings(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="959">In member 'UserControlBase.DiffCompareStrings(string, string)', consider replacing the data type identifier 'String' in parameter name 'currentString' with a more generic term, such as 'value'.</Issue>
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="959">In member 'UserControlBase.DiffCompareStrings(string, string)', consider replacing the data type identifier 'String' in parameter name 'oldString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="959">The 'this' parameter (or 'Me' in Visual Basic) of 'UserControlBase.DiffCompareStrings(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormSignOut(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1091">Modify 'UserControlBase.FormSignOut(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1068">Change the type of parameter 'redirectUrl' of method 'UserControlBase.FormSignOut(string)' from string to System.Uri, or provide an overload of 'UserControlBase.FormSignOut(string)', that allows 'redirectUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleException(System.Exception)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="981">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'UserControlBase.HandleException(Exception)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="981">In externally visible method 'UserControlBase.HandleException(Exception)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleException(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="997">'UserControlBase.HandleException(string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasPermission(enumPermission)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="200">In member 'UserControlBase.HasPermission(enumPermission)', correct the casing of 'ID' in parameter name 'permissionEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasPermissionExcludeAdministrator(enumPermission)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="214">In member 'UserControlBase.HasPermissionExcludeAdministrator(enumPermission)', correct the casing of 'ID' in parameter name 'permissionEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isCLFullPerformancePD" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="355">Correct the casing of 'is' in member name 'UserControlBase.isCLFullPerformancePD' by changing it to 'Is'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isCLSOD" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CLSOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="367">Correct the casing of 'CLSOD' in member name 'UserControlBase.isCLSOD' by changing it to 'Clsod'.</Issue>
            </Message>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="367">Correct the casing of 'is' in member name 'UserControlBase.isCLSOD' by changing it to 'Is'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isCopiedFromExistingPD" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="379">Correct the casing of 'is' in member name 'UserControlBase.isCopiedFromExistingPD' by changing it to 'Is'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsOrgCodeSupervisor(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="442">In member 'UserControlBase.IsOrgCodeSupervisor(int)', correct the casing of 'ID' in parameter name 'orgCodeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isPDCreatorSupervisor(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="663">Correct the casing of 'is' in member name 'UserControlBase.isPDCreatorSupervisor(bool)' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="664">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'UserControlBase.isPDCreatorSupervisor(bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="664">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'UserControlBase.isPDCreatorSupervisor(bool)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JUSTOTHER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="JUSTOTHER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'JUSTOTHER' in member name 'UserControlBase.JUSTOTHER' by changing it to 'Justother'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KSA_COMBOBOX_DEFAULT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="COMBOBOX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'COMBOBOX' in member name 'UserControlBase.KSA_COMBOBOX_DEFAULT' by changing it to 'Combobox'.</Issue>
            </Message>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'UserControlBase.KSA_COMBOBOX_DEFAULT' by changing it to 'Default'.</Issue>
            </Message>
            <Message Id="KSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'KSA' in member name 'UserControlBase.KSA_COMBOBOX_DEFAULT' by changing it to 'Ksa'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogExceptionOnly(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1005">The 'this' parameter (or 'Me' in Visual Basic) of 'UserControlBase.LogExceptionOnly(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLACTIONRECID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLACTIONRECID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLACTIONRECID' in member name 'UserControlBase.NULLACTIONRECID' by changing it to 'Nullactionrecid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLGROUPID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLGROUPID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLGROUPID' in member name 'UserControlBase.NULLGROUPID' by changing it to 'Nullgroupid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLKEYID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLKEYID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLKEYID' in member name 'UserControlBase.NULLKEYID' by changing it to 'Nullkeyid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLPDID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLPDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLPDID' in member name 'UserControlBase.NULLPDID' by changing it to 'Nullpdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLRULEID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLRULEID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLRULEID' in member name 'UserControlBase.NULLRULEID' by changing it to 'Nullruleid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLSTAFFINGOBJECTTYPEID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLSTAFFINGOBJECTTYPEID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLSTAFFINGOBJECTTYPEID' in member name 'UserControlBase.NULLSTAFFINGOBJECTTYPEID' by changing it to 'Nullstaffingobjecttypeid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLSTATUSID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLSTATUSID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLSTATUSID' in member name 'UserControlBase.NULLSTATUSID' by changing it to 'Nullstatusid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OTHERKSATEXT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OTHERKSATEXT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OTHERKSATEXT' in member name 'UserControlBase.OTHERKSATEXT' by changing it to 'Otherksatext'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OTHERTASKSTATEMENTTEXT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OTHERTASKSTATEMENTTEXT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OTHERTASKSTATEMENTTEXT' in member name 'UserControlBase.OTHERTASKSTATEMENTTEXT' by changing it to 'Othertaskstatementtext'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintErrorMessage(System.Exception,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1052">In externally visible method 'UserControlBase.PrintErrorMessage(Exception, bool)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReEvaluatePDAccessStatus(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ReEvaluate" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="639">The compound word 'ReEvaluate' in member name 'UserControlBase.ReEvaluatePDAccessStatus(bool)' exists as a discrete term. If your usage is intended to be single word, case it as 'Reevaluate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="reEvaluate" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="639">In member 'UserControlBase.ReEvaluatePDAccessStatus(bool)', the compound word 'reEvaluate' in parameter name 'reEvaluate' exists as a discrete term. If your usage is intended to be single word, case it as 'reevaluate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="651">Modify 'UserControlBase.ReEvaluatePDAccessStatus(bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="639">Correct the casing of 'Re' in member name 'UserControlBase.ReEvaluatePDAccessStatus(bool)' by changing it to 'RE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReloadCurrentPD(System.Int64)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="816">Modify 'UserControlBase.ReloadCurrentPD(long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="804">In member 'UserControlBase.ReloadCurrentPD(long)', correct the casing of 'ID' in parameter name 'positionDescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeRedirect(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="939">Modify 'UserControlBase.SafeRedirect(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="933">In member 'UserControlBase.SafeRedirect(string)', correct the casing of 'URL' in parameter name 'newURL' by changing it to 'Url'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="933">Change the type of parameter 'newURL' of method 'UserControlBase.SafeRedirect(string)' from string to System.Uri, or provide an overload of 'UserControlBase.SafeRedirect(string)', that allows 'newURL' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetGridInEditMode(Telerik.Web.UI.RadGrid)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1095">The 'this' parameter (or 'Me' in Visual Basic) of 'UserControlBase.SetGridInEditMode(RadGrid)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="1096">In externally visible method 'UserControlBase.SetGridInEditMode(RadGrid)', validate parameter 'currentGrid' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPageTitle(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BaseControls" File="UserControlBase.cs" Line="608">Modify 'UserControlBase.SetPageTitle(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TitleChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'UserControlBase.TitleChangedHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'UserControlBase.TitleChangedHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'UserControlBase.TitleChangedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserControlBase+TitleChangedHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UserControlBase.TitleChangedHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.BasePages">
       <Types>
        <Type Name="AdminPageBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnLoad(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="HCMS.WebFramework.BasePages.PageBase.PrintErrorMessage(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="AdminPageBase.cs" Line="112">Method 'AdminPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "The user account is either not specified or it does not exist in the system.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="AdminPageBase.cs" Line="117">Method 'AdminPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "You do not have permission to access the user account specified.".</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="AdminPageBase.cs" Line="106">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'AdminPageBase.OnLoad(EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequireUserID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="AdminPageBase.cs" Line="15">Correct the casing of 'ID' in member name 'AdminPageBase.RequireUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JNPPageBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'JNP' in type name 'JNPPageBase' by changing it to 'Jnp'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MasterPageBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CurrentPD" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="198">The 'this' parameter (or 'Me' in Visual Basic) of 'MasterPageBase.CurrentPD' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentPermissions" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="130">Change 'PermissionCollection' in 'MasterPageBase.CurrentPermissions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HandleException(System.Exception,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="271">In externally visible method 'MasterPageBase.HandleException(Exception, bool)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasPermission(enumPermission)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="141">In member 'MasterPageBase.HasPermission(enumPermission)', correct the casing of 'ID' in parameter name 'permissionEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogExceptionOnly(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="282">The 'this' parameter (or 'Me' in Visual Basic) of 'MasterPageBase.LogExceptionOnly(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReEvaluatePDAccessStatus(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ReEvaluate" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="226">The compound word 'ReEvaluate' in member name 'MasterPageBase.ReEvaluatePDAccessStatus(bool)' exists as a discrete term. If your usage is intended to be single word, case it as 'Reevaluate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="reEvaluate" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="226">In member 'MasterPageBase.ReEvaluatePDAccessStatus(bool)', the compound word 'reEvaluate' in parameter name 'reEvaluate' exists as a discrete term. If your usage is intended to be single word, case it as 'reevaluate' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="238">Modify 'MasterPageBase.ReEvaluatePDAccessStatus(bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="MasterPageBase.cs" Line="226">Correct the casing of 'Re' in member name 'MasterPageBase.ReEvaluatePDAccessStatus(bool)' by changing it to 'RE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSubMenuItem" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubMenu' in member name 'MasterPageBase.SelectSubMenuItem' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowInformationDiv" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Div" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Div' in member name 'MasterPageBase.ShowInformationDiv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowSubMenu" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubMenu' in member name 'MasterPageBase.ShowSubMenu' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubMenuType" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubMenu' in member name 'MasterPageBase.SubMenuType' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PageBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CurrentPermissions" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="30">Change 'PermissionCollection' in 'PageBase.CurrentPermissions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAppThemeUrl(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="inurl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="366">In method 'PageBase.GetAppThemeUrl(string)', correct the spelling of 'inurl' in parameter name 'inurl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="366">The 'this' parameter (or 'Me' in Visual Basic) of 'PageBase.GetAppThemeUrl(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="366">Change the return type of 'PageBase.GetAppThemeUrl(string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasPermission(enumPermission)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="41">In member 'PageBase.HasPermission(enumPermission)', correct the casing of 'ID' in parameter name 'permissionEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasValidIntegerQueryStrings()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="318">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'PageBase.HasValidIntegerQueryStrings()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasValidQuerystrings" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Querystrings" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="76">Correct the spelling of 'Querystrings' in member name 'PageBase.HasValidQuerystrings' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#isPDCreatorSupervisor(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="is" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="351">Correct the casing of 'is' in member name 'PageBase.isPDCreatorSupervisor(bool)' by changing it to 'Is'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="352">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PageBase.isPDCreatorSupervisor(bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="352">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'PageBase.isPDCreatorSupervisor(bool)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLKEYID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLKEYID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLKEYID' in member name 'PageBase.NULLKEYID' by changing it to 'Nullkeyid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Error(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="HCMS.WebFramework.BasePages.PageBase.PrintErrorMessage(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="136">Method 'PageBase.Page_Error(object, EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "Request Server with illegal character".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PokePage()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="386">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'PageBase.PokePage()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="386">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PageBase.PokePage()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeRedirect(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="338">Modify 'PageBase.SafeRedirect(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="333">In member 'PageBase.SafeRedirect(string)', correct the casing of 'URL' in parameter name 'newURL' by changing it to 'Url'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="333">Change the type of parameter 'newURL' of method 'PageBase.SafeRedirect(string)' from string to System.Uri, or provide an overload of 'PageBase.SafeRedirect(string)', that allows 'newURL' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectSubMenuItem" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="249">The compound word 'SubMenu' in member name 'PageBase.SelectSubMenuItem' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowInformationDiv" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Div" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="208">Correct the spelling of 'Div' in member name 'PageBase.ShowInformationDiv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowLeftMenu" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="214">Because property 'PageBase.ShowLeftMenu' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowRequiredFieldMessage" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="201">Because property 'PageBase.ShowRequiredFieldMessage' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowSubMenu" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="220">The compound word 'SubMenu' in member name 'PageBase.ShowSubMenu' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubMenuType" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="SubMenu" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageBase.cs" Line="243">The compound word 'SubMenu' in member name 'PageBase.SubMenuType' exists as a discrete term. If your usage is intended to be single word, case it as 'Submenu' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PageCoreBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HandleException(System.Exception)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageCoreBase.cs" Line="17">In externally visible method 'PageCoreBase.HandleException(Exception)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogExceptionOnly(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="PageCoreBase.cs" Line="27">The 'this' parameter (or 'Me' in Visual Basic) of 'PageCoreBase.LogExceptionOnly(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PDControlType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SOD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SOD' in member name 'PDControlType.SOD' by changing it to 'Sod'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserAdministrationPageBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnLoad(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="HCMS.WebFramework.BasePages.PageBase.PrintErrorMessage(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="97">Method 'UserAdministrationPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "The user account parameter passed to this page is not valid.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="79">Method 'UserAdministrationPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "The user account specified does not exist in the system.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="84">Method 'UserAdministrationPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "You do not have permission to access the user account specified.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="72">Method 'UserAdministrationPageBase.OnLoad(EventArgs)' passes a literal string as parameter 'message' of a call to 'PageBase.PrintErrorMessage(string)'. Retrieve the following string(s) from a resource table instead: "You must specify the user ID of the account to access this page.".</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="75">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'UserAdministrationPageBase.OnLoad(EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequireUserID" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\BasePages" File="UserAdministrationPageBase.cs" Line="14">Correct the casing of 'ID' in member name 'UserAdministrationPageBase.RequireUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Common">
       <Types>
        <Type Name="CachedDataHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCachedData`1(System.Boolean,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Common" File="CachedDataHandler.cs" Line="56">Change 'List&lt;T&gt;' in 'CachedDataHandler.GetCachedData&lt;T&gt;(bool, string, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCachedData`1(System.Boolean,System.String,System.String,System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Common" File="CachedDataHandler.cs" Line="61">Change 'List&lt;T&gt;' in 'CachedDataHandler.GetCachedData&lt;T&gt;(bool, string, string, params object[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Common" File="CachedDataHandler.cs" Line="85">'CachedDataHandler.GetCachedData&lt;T&gt;(bool, string, string, params object[])' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Common" File="CachedDataHandler.cs" Line="80">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CachedDataHandler.GetCachedData&lt;T&gt;(bool, string, string, params object[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Common" File="CachedDataHandler.cs" Line="69">In externally visible method 'CachedDataHandler.GetCachedData&lt;T&gt;(bool, string, string, params object[])', validate parameter 'argumentList' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Controls.RadGrid">
       <Types>
        <Type Name="NoRecordsTemplate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InstantiateIn(System.Web.UI.Control)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Controls\RadGrid" File="NoRecordsTemplate.cs" Line="18">In method 'NoRecordsTemplate.InstantiateIn(Control)', object 'literalMessage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'literalMessage' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Controls\RadGrid" File="NoRecordsTemplate.cs" Line="22">In externally visible method 'NoRecordsTemplate.InstantiateIn(Control)', validate parameter 'container' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.CustomControls">
       <Types>
        <Type Name="ShowPdf" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FilePath" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_FilePath(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\CustomControls" File="ShowPdf.cs" Line="39">Replace the call to 'string.operator ==(string, string)' in 'ShowPdf.FilePath.set(string)' with a call to 'String.IsNullOrEmpty'.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\CustomControls" File="ShowPdf.cs" Line="46">In externally visible method 'ShowPdf.FilePath.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#RenderContents(System.Web.UI.HtmlTextWriter)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\CustomControls" File="ShowPdf.cs" Line="80">Modify 'ShowPdf.RenderContents(HtmlTextWriter)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\CustomControls" File="ShowPdf.cs" Line="76">In externally visible method 'ShowPdf.RenderContents(HtmlTextWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Security">
       <Types>
        <Type Name="ActiveDirectoryUser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Error">'ActiveDirectoryUser' should override Equals since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'ActiveDirectoryUser' should define operator '!=' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'ActiveDirectoryUser' should define operator '&lt;' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'ActiveDirectoryUser' should define operator '==' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'ActiveDirectoryUser' should define operator '&gt;' since it implements IComparable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.DirectoryServices.SearchResult)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="ActiveDirectoryUser.cs" Line="92">In externally visible method 'ActiveDirectoryUser.ActiveDirectoryUser(SearchResult)', validate parameter 'result' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetailLine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_DetailLine()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="ActiveDirectoryUser.cs" Line="77">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'ActiveDirectoryUser.DetailLine.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SAMAccountName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SAM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="ActiveDirectoryUser.cs" Line="24">Correct the casing of 'SAM' in member name 'ActiveDirectoryUser.SAMAccountName' by changing it to 'Sam'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.IComparable.CompareTo(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="ActiveDirectoryUser.cs" Line="121">Make 'ActiveDirectoryUser' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IComparable.CompareTo(object)' and is visible to derived classes.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="ActiveDirectoryUser.cs" Line="123">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'ActiveDirectoryUser.IComparable.CompareTo(object)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LDAPAccessBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'LDAPAccessBase' to protected.</Issue>
          </Message>
          <Message Id="LDAP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LDAP' in type name 'LDAPAccessBase' by changing it to 'Ldap'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="LDAPAuthenticator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LDAP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LDAP' in type name 'LDAPAuthenticator' by changing it to 'Ldap'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsAuthenticated(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPAuthenticator.cs" Line="15">In member 'LDAPAuthenticator.IsAuthenticated(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPAuthenticator.cs" Line="20">In method 'LDAPAuthenticator.IsAuthenticated(string, string)', object 'de' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'de' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPAuthenticator.cs" Line="21">In method 'LDAPAuthenticator.IsAuthenticated(string, string)', call System.IDisposable.Dispose on object 'deSearch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPAuthenticator.cs" Line="32">'LDAPAuthenticator.IsAuthenticated(string, string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LDAPSearcher" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="LDAP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LDAP' in type name 'LDAPSearcher' by changing it to 'Ldap'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Search(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="19">Change 'ActiveDirectoryUserCollection' in 'LDAPSearcher.Search(string, string, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Search(System.String,System.String,System.String,HCMS.Business.Security.Collections.UserCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="32">In method 'LDAPSearcher.Search(string, string, string, UserCollection)', object 'de' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'de' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="33">In method 'LDAPSearcher.Search(string, string, string, UserCollection)', call System.IDisposable.Dispose on object 'search' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="24">Change 'ActiveDirectoryUserCollection' in 'LDAPSearcher.Search(string, string, string, UserCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="24">Change 'UserCollection' in 'LDAPSearcher.Search(string, string, string, UserCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="91">'LDAPSearcher.Search(string, string, string, UserCollection)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="47">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="50">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="53">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="63">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="65">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="69">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LDAPSearcher.Search(string, string, string, UserCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="27">In externally visible method 'LDAPSearcher.Search(string, string, string, UserCollection)', validate parameter 'searchLastName' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="26">In externally visible method 'LDAPSearcher.Search(string, string, string, UserCollection)', validate parameter 'searchFirstName' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="LDAPSearcher.cs" Line="28">In externally visible method 'LDAPSearcher.Search(string, string, string, UserCollection)', validate parameter 'searchEmailAddress' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SiteIdentity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(HCMS.Business.Security.ISiteUser,HCMS.Business.Security.Collections.RoleCollection,HCMS.Business.Security.Collections.PermissionCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="17">Change 'PermissionCollection' in 'SiteIdentity.SiteIdentity(ISiteUser, RoleCollection, PermissionCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="17">Change 'RoleCollection' in 'SiteIdentity.SiteIdentity(ISiteUser, RoleCollection, PermissionCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="42">In externally visible method 'SiteIdentity.SiteIdentity(ISiteUser, RoleCollection, PermissionCollection)', validate parameter 'currentUser' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Name" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Name()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="66">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SiteIdentity.Name.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Permissions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="143">Change 'PermissionCollection' in 'SiteIdentity.Permissions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegionID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="109">Correct the casing of 'ID' in member name 'SiteIdentity.RegionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Roles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="135">Change 'RoleCollection' in 'SiteIdentity.Roles' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SiteIdentity.cs" Line="77">Correct the casing of 'ID' in member name 'SiteIdentity.UserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SitePrincipal" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasPermission(enumPermission)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SitePrincipal.cs" Line="74">In member 'SitePrincipal.HasPermission(enumPermission)', correct the casing of 'ID' in parameter name 'permissionEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInRole(enumRole)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SitePrincipal.cs" Line="55">In member 'SitePrincipal.IsInRole(enumRole)', correct the casing of 'ID' in parameter name 'roleEnumID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInRole(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security" File="SitePrincipal.cs" Line="40">In member 'SitePrincipal.IsInRole(string)', change parameter name 'roleName' to 'role' in order to match the identifier as it has been declared in 'IPrincipal.IsInRole(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Security.Collections">
       <Types>
        <Type Name="ActiveDirectoryUserCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Find(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security\Collections" File="ActiveDirectoryUserCollection.cs" Line="16">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ActiveDirectoryUserCollection.Find(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Security\Collections" File="ActiveDirectoryUserCollection.cs" Line="16">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ActiveDirectoryUserCollection.Find(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Serializers">
       <Types>
        <Type Name="ChartPositionListJsonSerializer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FPPS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'FPPS' in parameter name 'loadFPPSNodeColor' by changing it to 'Fpps'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'FPPS' in parameter name 'loadFPPSTemplateName' by changing it to 'Fpps'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'FPPS' in parameter name 'loadFPPSVacantPhrase' by changing it to 'Fpps'.</Issue>
            </Message>
            <Message Id="WFP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'WFP' in parameter name 'loadWFPNodeColor' by changing it to 'Wfp'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'WFP' in parameter name 'loadWFPTemplateName' by changing it to 'Wfp'.</Issue>
            </Message>
            <Message Id="WPF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="15">In member 'ChartPositionListJsonSerializer.ChartPositionListJsonSerializer(string, string, string, string, string, string, string, string, string)', correct the casing of 'WPF' in parameter name 'loadWPFVacantPhrase' by changing it to 'Wpf'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_PositionListFunctionName" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ChartPositionListJsonSerializer._PositionListFunctionName' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cleanLine(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="52">The 'this' parameter (or 'Me' in Visual Basic) of 'ChartPositionListJsonSerializer.cleanLine(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getEmploymentStatus(HCMS.Business.OrganizationChart.IChartPosition)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="77">The 'this' parameter (or 'Me' in Visual Basic) of 'ChartPositionListJsonSerializer.getEmploymentStatus(IChartPosition)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJSON(System.Collections.Generic.IList`1&lt;HCMS.Business.OrganizationChart.IChartPosition&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="46">In member 'ChartPositionListJsonSerializer.GetJSON(IList&lt;IChartPosition&gt;, int)', correct the casing of 'ID' in parameter name 'chartRootNodeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="JSON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="46">Correct the casing of 'JSON' in member name 'ChartPositionListJsonSerializer.GetJSON(IList&lt;IChartPosition&gt;, int)' by changing it to 'Json'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getPositionListJSON(System.Collections.Generic.IList`1&lt;HCMS.Business.OrganizationChart.IChartPosition&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="123">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChartPositionListJsonSerializer.getPositionListJSON(IList&lt;IChartPosition&gt;, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="151">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChartPositionListJsonSerializer.getPositionListJSON(IList&lt;IChartPosition&gt;, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="151">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChartPositionListJsonSerializer.getPositionListJSON(IList&lt;IChartPosition&gt;, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Serializers" File="ChartPositionListJsonSerializer.cs" Line="151">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'ChartPositionListJsonSerializer.getPositionListJSON(IList&lt;IChartPosition&gt;, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Site.Builders">
       <Types>
        <Type Name="OrganizationChartPDFBuilder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PDF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PDF' in type name 'OrganizationChartPDFBuilder' by changing it to 'Pdf'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#BuildChart(HCMS.Business.OrganizationChart.IOrganizationChart,HCMS.Business.OrganizationChart.Processing.ITemporaryDocument)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="55">'OrganizationChartPDFBuilder.BuildChart(IOrganizationChart, ITemporaryDocument)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="57">'OrganizationChartPDFBuilder.BuildChart(IOrganizationChart, ITemporaryDocument)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="IOrganizationChart" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="55">Correct the spelling of the unrecognized token 'IOrganizationChart' in the literal '"IOrganizationChart cannot be null"'.</Issue>
            </Message>
            <Message Id="ITemporaryDocument" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="57">Correct the spelling of the unrecognized token 'ITemporaryDocument' in the literal '"ITemporaryDocument cannot be null"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="60">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.BuildChart(IOrganizationChart, ITemporaryDocument)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buildPDFDocument(HCMS.Business.OrganizationChart.IOrganizationChart,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="204">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.buildPDFDocument(IOrganizationChart, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="204">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.buildPDFDocument(IOrganizationChart, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#deleteTemporaryFile(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="219">Modify 'OrganizationChartPDFBuilder.deleteTemporaryFile(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="212">The 'this' parameter (or 'Me' in Visual Basic) of 'OrganizationChartPDFBuilder.deleteTemporaryFile(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getTemplateWithData(HCMS.Business.OrganizationChart.IOrganizationChart,HCMS.Business.OrganizationChart.Processing.ITemporaryDocument,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="125">'chart', a parameter, is cast to type 'OrganizationChartLog' multiple times in method 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="109">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="111">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="150">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="107">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="126">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.getTemplateWithData(IOrganizationChart, ITemporaryDocument, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loadTemplateContents(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="90">Modify 'OrganizationChartPDFBuilder.loadTemplateContents(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Builders" File="OrganizationChartPDFBuilder.cs" Line="93">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrganizationChartPDFBuilder.loadTemplateContents(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Site.ConfigClasses">
       <Types>
        <Type Name="ConfigMessage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessage.cs" Line="15">Correct the casing of 'ID' in member name 'ConfigMessage.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConfigMessages" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'ConfigMessages' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of ICollection&lt;T&gt; where T is the underlying element type of 'ConfigMessages'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'ConfigMessages' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="11">'ConfigMessages.ConfigMessages()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ConfigMessages..ctor()&#xD;&#xA;ConfigurationElementCollection.CreateNewElement():ConfigurationElement</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="11">'ConfigMessages.ConfigMessages()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ConfigMessages..ctor()&#xD;&#xA;ConfigurationElementCollection.CreateNewElement():ConfigurationElement&#xD;&#xA;ConfigMessages.Add(ConfigMessage):Void&#xD;&#xA;ConfigurationElementCollection.BaseAdd(ConfigurationElement):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Add(HCMS.WebFramework.Site.ConfigClasses.ConfigMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="configmsg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="55">In method 'ConfigMessages.Add(ConfigMessage)', correct the spelling of 'configmsg' in parameter name 'configmsg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndexOf(HCMS.WebFramework.Site.ConfigClasses.ConfigMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="configmsg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="50">In method 'ConfigMessages.IndexOf(ConfigMessage)', correct the spelling of 'configmsg' in parameter name 'configmsg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.String]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="35">In member 'ConfigMessages.this[string]', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(HCMS.WebFramework.Site.ConfigClasses.ConfigMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="configmsg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="60">In method 'ConfigMessages.Remove(ConfigMessage)', correct the spelling of 'configmsg' in parameter name 'configmsg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="63">In externally visible method 'ConfigMessages.Remove(ConfigMessage)', validate parameter 'configmsg' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessages.cs" Line="72">In member 'ConfigMessages.Remove(int)', correct the casing of 'ID' in parameter name 'ID' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConfigMessagesSection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#JAnPMessages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="JAn" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessagesSection.cs" Line="50">The compound word 'JAn' in member name 'ConfigMessagesSection.JAnPMessages' exists as a discrete term. If your usage is intended to be single word, case it as 'Jan' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JAnPMessagesSection" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="JAn" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessagesSection.cs" Line="43">The compound word 'JAn' in member name 'ConfigMessagesSection.JAnPMessagesSection' exists as a discrete term. If your usage is intended to be single word, case it as 'Jan' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#jnpmessage" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ConfigMessagesSection.jnpmessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#message" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ConfigMessagesSection.message' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PDXMessages" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PDX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessagesSection.cs" Line="35">Correct the casing of 'PDX' in member name 'ConfigMessagesSection.PDXMessages' by changing it to 'Pdx'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PDXMessagesSection" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PDX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\ConfigClasses" File="ConfigMessagesSection.cs" Line="21">Correct the casing of 'PDX' in member name 'ConfigMessagesSection.PDXMessagesSection' by changing it to 'Pdx'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Site.Sessions">
       <Types>
        <Type Name="OrganizationChartLogSessionWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CurrentOrgChartLogID" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Sessions" File="OrganizationChartLogSessionWrapper.cs" Line="36">Correct the casing of 'ID' in member name 'OrganizationChartLogSessionWrapper.CurrentOrgChartLogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetCurrentOrgChartLog(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Sessions" File="OrganizationChartLogSessionWrapper.cs" Line="55">In member 'OrganizationChartLogSessionWrapper.ResetCurrentOrgChartLog(int)', correct the casing of 'ID' in parameter name 'organizationChartLogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserSessionWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CurrentUserID" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Sessions" File="UserSessionWrapper.cs" Line="19">Correct the casing of 'ID' in member name 'UserSessionWrapper.CurrentUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Site.Utilities">
       <Types>
        <Type Name="ControlUtility" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BindASPListBoxControlWithBackground(System.Web.UI.WebControls.ListBox,System.Object,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ASP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="264">Correct the casing of 'ASP' in member name 'ControlUtility.BindASPListBoxControlWithBackground(ListBox, object, string, string, string, string)' by changing it to 'Asp'.</Issue>
            </Message>
            <Message Id="preselectedValue" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="264">Parameter 'preselectedValue' of 'ControlUtility.BindASPListBoxControlWithBackground(ListBox, object, string, string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="topOption" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="264">Parameter 'topOption' of 'ControlUtility.BindASPListBoxControlWithBackground(ListBox, object, string, string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="265">In externally visible method 'ControlUtility.BindASPListBoxControlWithBackground(ListBox, object, string, string, string, string)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindListControl(System.Web.UI.WebControls.ListControl,System.Object,HCMS.WebFramework.Site.Utilities.ControlUtility+ListControlBindFilter,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="79">In externally visible method 'ControlUtility.BindListControl(ListControl, object, ControlUtility.ListControlBindFilter, string, string, string, string)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindRadComboBoxControl(Telerik.Web.UI.RadComboBox,System.Object,HCMS.WebFramework.Site.Utilities.ControlUtility+RadComboBoxItemFilter,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="168">In method 'ControlUtility.BindRadComboBoxControl(RadComboBox, object, ControlUtility.RadComboBoxItemFilter, string, string, string, string)', call System.IDisposable.Dispose on object 'new RadComboBoxItem(topOption, "-1")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="146">In externally visible method 'ControlUtility.BindRadComboBoxControl(RadComboBox, object, ControlUtility.RadComboBoxItemFilter, string, string, string, string)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindRadComboBoxControlWithBackground(Telerik.Web.UI.RadComboBox,System.Object,HCMS.WebFramework.Site.Utilities.ControlUtility+RadComboBoxItemFilter,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="199">In method 'ControlUtility.BindRadComboBoxControlWithBackground(RadComboBox, object, ControlUtility.RadComboBoxItemFilter, string, string, string, string)', call System.IDisposable.Dispose on object 'new RadComboBoxItem(topOption, "-1")' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="177">In externally visible method 'ControlUtility.BindRadComboBoxControlWithBackground(RadComboBox, object, ControlUtility.RadComboBoxItemFilter, string, string, string, string)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindRadListBoxControlWithBackground(Telerik.Web.UI.RadListBox,System.Object,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="topOption" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="209">Parameter 'topOption' of 'ControlUtility.BindRadListBoxControlWithBackground(RadListBox, object, string, string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="210">In externally visible method 'ControlUtility.BindRadListBoxControlWithBackground(RadListBox, object, string, string, string, string)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckForSQLInjection(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="368">Correct the casing of 'SQL' in member name 'ControlUtility.CheckForSQLInjection(string)' by changing it to 'Sql'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearControls(System.String,System.Web.UI.Control[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="31">In member 'ControlUtility.ClearControls(string, params Control[])', correct the casing of 'UI' in parameter name 'UIControls' by changing it to 'ui'.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="60">'ControlUtility.ClearControls(string, params Control[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="34">In externally visible method 'ControlUtility.ClearControls(string, params Control[])', validate parameter 'UIControls' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToDataTable`1(System.Collections.Generic.IList`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="572">In method 'ControlUtility.ConvertToDataTable&lt;T&gt;(IList&lt;T&gt;)', object 'table' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'table' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="572">Be sure to set the DataTable Locale property wherever 'ControlUtility.ConvertToDataTable&lt;T&gt;(IList&lt;T&gt;)' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="578">In externally visible method 'ControlUtility.ConvertToDataTable&lt;T&gt;(IList&lt;T&gt;)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataTableToExcel(System.Data.DataTable,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="501">In member 'ControlUtility.ExportDataTableToExcel(DataTable, string)', correct the casing of 'DT' in parameter name 'DT' by changing it to 'dt'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="503">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportDataTableToExcel(DataTable, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="513">In externally visible method 'ControlUtility.ExportDataTableToExcel(DataTable, string)', validate parameter 'DT' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataTableToExcelEPP(System.Data.DataTable,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EPP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="465">Correct the casing of 'EPP' in member name 'ControlUtility.ExportDataTableToExcelEPP(DataTable, string, string)' by changing it to 'Epp'.</Issue>
            </Message>
            <Message Id="dt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="465">In method 'ControlUtility.ExportDataTableToExcelEPP(DataTable, string, string)', correct the spelling of 'dt' in parameter name 'dt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sheetname" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="465">In method 'ControlUtility.ExportDataTableToExcelEPP(DataTable, string, string)', correct the spelling of 'sheetname' in parameter name 'sheetname' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="467">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportDataTableToExcelEPP(DataTable, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="479">In externally visible method 'ControlUtility.ExportDataTableToExcelEPP(DataTable, string, string)', validate parameter 'dt' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportDataTableToText(System.Data.DataTable,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="534">In member 'ControlUtility.ExportDataTableToText(DataTable, string)', correct the casing of 'DT' in parameter name 'DT' by changing it to 'dt'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="539">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportDataTableToText(DataTable, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="544">In externally visible method 'ControlUtility.ExportDataTableToText(DataTable, string)', validate parameter 'DT' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportToDoc(System.String,Telerik.Reporting.Report)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="414">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportToDoc(string, Report)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportToPDF(System.String,Telerik.Reporting.Report)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PDF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="381">Correct the casing of 'PDF' in member name 'ControlUtility.ExportToPDF(string, Report)' by changing it to 'Pdf'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="393">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportToPDF(string, Report)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportToUTF8(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UTF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="424">Correct the casing of 'UTF' in member name 'ControlUtility.ExportToUTF8(string, string)' by changing it to 'Utf'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="424">In member 'ControlUtility.ExportToUTF8(string, string)', correct the casing of 'UTF' in parameter name 'UTF8String' by changing it to 'utf'.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="424">In member 'ControlUtility.ExportToUTF8(string, string)', consider replacing the data type identifier 'String' in parameter name 'UTF8String' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="encodedText" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="426">'ControlUtility.ExportToUTF8(string, string)' declares a variable, 'encodedText', of type 'byte[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="438">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportToUTF8(string, string)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="449">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.ExportToUTF8(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDropdownValue(System.Web.UI.WebControls.DropDownList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="317">The discrete term 'Dropdown' in member name 'ControlUtility.GetDropdownValue(DropDownList)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
            <Message Id="dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="317">In member 'ControlUtility.GetDropdownValue(DropDownList)', the discrete term 'dropdown' in parameter name 'dropdown' should be expressed as a compound word, 'dropDown'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDropdownValue(System.Web.UI.WebControls.DropDownList,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="322">The discrete term 'Dropdown' in member name 'ControlUtility.GetDropdownValue(DropDownList, string)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
            <Message Id="dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="322">In member 'ControlUtility.GetDropdownValue(DropDownList, string)', the discrete term 'dropdown' in parameter name 'dropdown' should be expressed as a compound word, 'dropDown'.</Issue>
            </Message>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="322">Consider changing the type of parameter 'dropdown' in 'ControlUtility.GetDropdownValue(DropDownList, string)' from 'DropDownList' to its base type 'ListControl'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="323">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.GetDropdownValue(DropDownList, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="323">In externally visible method 'ControlUtility.GetDropdownValue(DropDownList, string)', validate parameter 'dropdown' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDropdownValue(Telerik.Web.UI.RadComboBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="329">The discrete term 'Dropdown' in member name 'ControlUtility.GetDropdownValue(RadComboBox)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
            <Message Id="dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="329">In member 'ControlUtility.GetDropdownValue(RadComboBox)', the discrete term 'dropdown' in parameter name 'dropdown' should be expressed as a compound word, 'dropDown'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDropdownValue(Telerik.Web.UI.RadComboBox,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="334">The discrete term 'Dropdown' in member name 'ControlUtility.GetDropdownValue(RadComboBox, string)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
            <Message Id="dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="334">In member 'ControlUtility.GetDropdownValue(RadComboBox, string)', the discrete term 'dropdown' in parameter name 'dropdown' should be expressed as a compound word, 'dropDown'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="335">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ControlUtility.GetDropdownValue(RadComboBox, string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="335">In externally visible method 'ControlUtility.GetDropdownValue(RadComboBox, string)', validate parameter 'dropdown' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeLisBoxtControlSelect(Telerik.Web.UI.RadListBox,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Boxt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="239">Correct the spelling of 'Boxt' in member name 'ControlUtility.SafeLisBoxtControlSelect(RadListBox, object)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Lis" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="239">Correct the spelling of 'Lis' in member name 'ControlUtility.SafeLisBoxtControlSelect(RadListBox, object)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="inputControl" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="239">Parameter 'inputControl' of 'ControlUtility.SafeLisBoxtControlSelect(RadListBox, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="preselectedValue" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="239">Parameter 'preselectedValue' of 'ControlUtility.SafeLisBoxtControlSelect(RadListBox, object)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeListControlSelect(System.Web.UI.WebControls.ListControl,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="343">In externally visible method 'ControlUtility.SafeListControlSelect(ListControl, object)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="341">In externally visible method 'ControlUtility.SafeListControlSelect(ListControl, object)', validate parameter 'preselectedValue' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeListControlSelect(Telerik.Web.UI.RadComboBox,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="301">In externally visible method 'ControlUtility.SafeListControlSelect(RadComboBox, object)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="299">In externally visible method 'ControlUtility.SafeListControlSelect(RadComboBox, object)', validate parameter 'preselectedValue' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeTextBoxAssign(System.Web.UI.WebControls.TextBox,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="364">In externally visible method 'ControlUtility.SafeTextBoxAssign(TextBox, string)', validate parameter 'inputTextBox' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetASPListItemsBackground(System.Web.UI.WebControls.ListBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="275">Consider changing the type of parameter 'inputControl' in 'ControlUtility.SetASPListItemsBackground(ListBox)' from 'ListBox' to its base type 'ListControl'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="ASP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="275">Correct the casing of 'ASP' in member name 'ControlUtility.SetASPListItemsBackground(ListBox)' by changing it to 'Asp'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="276">In externally visible method 'ControlUtility.SetASPListItemsBackground(ListBox)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDropdownListItemsBackground(Telerik.Web.UI.RadComboBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="286">The discrete term 'Dropdown' in member name 'ControlUtility.SetDropdownListItemsBackground(RadComboBox)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="287">In externally visible method 'ControlUtility.SetDropdownListItemsBackground(RadComboBox)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetListItemsBackground(Telerik.Web.UI.RadListBox)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ControlUtility.cs" Line="254">In externally visible method 'ControlUtility.SetListItemsBackground(RadListBox)', validate parameter 'inputControl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ControlUtility+ListControlBindFilter" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ControlUtility.ListControlBindFilter'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ControlUtility+RadComboBoxItemFilter" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ControlUtility.RadComboBoxItemFilter'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SiteUtility" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildAuthenticationCookie(HCMS.Business.Security.User,HCMS.Business.Security.Collections.RoleCollection,HCMS.Business.Security.Collections.PermissionCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="110">Change 'PermissionCollection' in 'SiteUtility.BuildAuthenticationCookie(User, RoleCollection, PermissionCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="110">Change 'RoleCollection' in 'SiteUtility.BuildAuthenticationCookie(User, RoleCollection, PermissionCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="134">'SiteUtility.BuildAuthenticationCookie(User, RoleCollection, PermissionCollection)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="114">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SiteUtility.BuildAuthenticationCookie(User, RoleCollection, PermissionCollection)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="113">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'SiteUtility.BuildAuthenticationCookie(User, RoleCollection, PermissionCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClearCurrentOrgChart()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="316">'SiteUtility.ClearCurrentOrgChart()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertRelativeUrlToAbsoluteUrl(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="87">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="99">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="91">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="103">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="77">Change the type of parameter 'relativeUrl' of method 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' from string to System.Uri, or provide an overload of 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)', that allows 'relativeUrl' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="77">Change the return type of 'SiteUtility.ConvertRelativeUrlToAbsoluteUrl(string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentOrgChartID" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_CurrentOrgChartID(System.Int32)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="293">'SiteUtility.CurrentOrgChartID.set(int)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FindControlRecursive(System.Web.UI.Control,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="51">In member 'SiteUtility.FindControlRecursive(Control, string)', correct the casing of 'Id' in parameter name 'Id' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Root" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="51">In member 'SiteUtility.FindControlRecursive(Control, string)', correct the casing of 'Root' in parameter name 'Root' by changing it to 'root'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindControlRecursive(System.Web.UI.Control,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="45">'SiteUtility.FindControlRecursive(Control, string, string)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="Id" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="36">In member 'SiteUtility.FindControlRecursive(Control, string, string)', correct the casing of 'Id' in parameter name 'Id' by changing it to 'id'. 'id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Root" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="36">In member 'SiteUtility.FindControlRecursive(Control, string, string)', correct the casing of 'Root' in parameter name 'Root' by changing it to 'root'.</Issue>
            </Message>
            <Message Id="Mssg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="36">In method 'SiteUtility.FindControlRecursive(Control, string, string)', correct the spelling of 'Mssg' in parameter name 'exceptionMssg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="37">In externally visible method 'SiteUtility.FindControlRecursive(Control, string, string)', validate parameter 'Root' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="45">In externally visible method 'SiteUtility.FindControlRecursive(Control, string, string)', validate parameter 'exceptionMssg' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInRole(enumRole)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="173">'SiteUtility.IsInRole(enumRole)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLKEYID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLKEYID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLKEYID' in member name 'SiteUtility.NULLKEYID' by changing it to 'Nullkeyid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NULLPDID" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="NULLPDID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NULLPDID' in member name 'SiteUtility.NULLPDID' by changing it to 'Nullpdid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendEmail(System.String,System.String,System.String,System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="141">In method 'SiteUtility.SendEmail(string, string, string, string, string, int)', call System.IDisposable.Dispose on object 'mailmessage' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="142">In method 'SiteUtility.SendEmail(string, string, string, string, string, int)', call System.IDisposable.Dispose on object 'smtpclient' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="smtpserver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="SiteUtility.cs" Line="139">In method 'SiteUtility.SendEmail(string, string, string, string, string, int)', correct the spelling of 'smtpserver' in parameter name 'smtpserver' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValidationUtility" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsValidDate(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="16">Modify 'ValidationUtility.IsValidDate(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="currentDate" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="14">'ValidationUtility.IsValidDate(string)' declares a variable, 'currentDate', of type 'DateTime', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="14">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ValidationUtility.IsValidDate(string)' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidDecimal(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="48">Modify 'ValidationUtility.IsValidDecimal(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="tempDecimal" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="46">'ValidationUtility.IsValidDecimal(string)' declares a variable, 'tempDecimal', of type 'decimal', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Decimal.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="46">Because the behavior of 'decimal.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ValidationUtility.IsValidDecimal(string)' with a call to 'decimal.Parse(string, IFormatProvider)'. If the result of 'decimal.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidGUID(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="78">Modify 'ValidationUtility.IsValidGUID(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="GUID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="71">Correct the casing of 'GUID' in member name 'ValidationUtility.IsValidGUID(string)' by changing it to 'Guid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidHex(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="59">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ValidationUtility.IsValidHex(string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="64">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'ValidationUtility.IsValidHex(string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="59">In externally visible method 'ValidationUtility.IsValidHex(string)', validate parameter 'hexValue' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidInteger(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="32">Modify 'ValidationUtility.IsValidInteger(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="tempInt" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="30">'ValidationUtility.IsValidInteger(string)' declares a variable, 'tempInt', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Utilities" File="ValidationUtility.cs" Line="30">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ValidationUtility.IsValidInteger(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="HCMS.WebFramework.Site.Wrappers">
       <Types>
        <Type Name="ConfigWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EEOText" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EEO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="54">Correct the casing of 'EEO' in member name 'ConfigWrapper.EEOText' by changing it to 'Eeo'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_EEOText()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="61">Modify 'ConfigWrapper.EEOText.get()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FormsAuthTimeout" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="30">Correct the spelling of 'Auth' in member name 'ConfigWrapper.FormsAuthTimeout' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_FormsAuthTimeout()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="36">Modify 'ConfigWrapper.FormsAuthTimeout.get()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
              </Message>
              <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="34">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ConfigWrapper.FormsAuthTimeout.get()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#JumpLogin" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="90">Replace the term 'Login' in member name 'ConfigWrapper.JumpLogin' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_JumpLogin()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Boolean.TryParse(System.String,System.Boolean@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="93">'ConfigWrapper.JumpLogin.get()' calls 'bool.TryParse(string, out bool)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#JumpLoginID" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="73">Correct the casing of 'ID' in member name 'ConfigWrapper.JumpLoginID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="73">Replace the term 'Login' in member name 'ConfigWrapper.JumpLoginID' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_JumpLoginID()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="79">Modify 'ConfigWrapper.JumpLoginID.get()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
              </Message>
              <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="77">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ConfigWrapper.JumpLoginID.get()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#PersistAuthCookie" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="46">Correct the spelling of 'Auth' in member name 'ConfigWrapper.PersistAuthCookie' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_PersistAuthCookie()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="47">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ConfigWrapper.PersistAuthCookie.get()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#SystemImportUserID" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ConfigWrapper.cs" Line="111">Correct the casing of 'ID' in member name 'ConfigWrapper.SystemImportUserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LookupWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CacheData`1(System.Boolean,System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="32">Change 'List&lt;T&gt;' in 'LookupWrapper.CacheData&lt;T&gt;(bool, string, string, string, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CacheData`1(System.Boolean,System.String,System.String,System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="38">Change 'List&lt;T&gt;' in 'LookupWrapper.CacheData&lt;T&gt;(bool, string, string, string, string, params object[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllAppointmentTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="339">Change 'List&lt;AppointmentType&gt;' in 'LookupWrapper.GetAllAppointmentTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllClassificationStandardSources(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="199">Change 'List&lt;ClassificationStandardSource&gt;' in 'LookupWrapper.GetAllClassificationStandardSources(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllDutyTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="90">Change 'List&lt;DutyType&gt;' in 'LookupWrapper.GetAllDutyTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllEvalCriterias(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="217">Change 'List&lt;EvalCriteria&gt;' in 'LookupWrapper.GetAllEvalCriterias(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Criterias" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="217">Correct the spelling of 'Criterias' in member name 'LookupWrapper.GetAllEvalCriterias(bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Eval" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="217">Correct the spelling of 'Eval' in member name 'LookupWrapper.GetAllEvalCriterias(bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllFactorFormatType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="176">Change 'List&lt;FactorFormatType&gt;' in 'LookupWrapper.GetAllFactorFormatType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllFesFactorLevelPoints(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="224">Change 'List&lt;FesFactorLevelPoints&gt;' in 'LookupWrapper.GetAllFesFactorLevelPoints(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllFLSATypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="205">Change 'List&lt;FLSAType&gt;' in 'LookupWrapper.GetAllFLSATypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="FLSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="205">Correct the casing of 'FLSA' in member name 'LookupWrapper.GetAllFLSATypes(bool)' by changing it to 'Flsa'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllGrades(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="54">Change 'GradeCollection' in 'LookupWrapper.GetAllGrades(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllInUsePayPlans(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="84">Change 'PayPlanCollection' in 'LookupWrapper.GetAllInUsePayPlans(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllInUseSeries(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="72">Change 'SeriesCollection' in 'LookupWrapper.GetAllInUseSeries(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllJNPOptionType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="266">Change 'List&lt;JNPOptionType&gt;' in 'LookupWrapper.GetAllJNPOptionType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="266">Correct the casing of 'JNP' in member name 'LookupWrapper.GetAllJNPOptionType(bool)' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllJNPStaffingObjectType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="261">Change 'List&lt;StaffingObjectType&gt;' in 'LookupWrapper.GetAllJNPStaffingObjectType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="261">Correct the casing of 'JNP' in member name 'LookupWrapper.GetAllJNPStaffingObjectType(bool)' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllJNPWorkflowStatus(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="315">Change 'List&lt;JNPWorkflowStatus&gt;' in 'LookupWrapper.GetAllJNPWorkflowStatus(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="JNP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="315">Correct the casing of 'JNP' in member name 'LookupWrapper.GetAllJNPWorkflowStatus(bool)' by changing it to 'Jnp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllKSA(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="297">Change 'List&lt;KSA&gt;' in 'LookupWrapper.GetAllKSA(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="KSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="297">Correct the casing of 'KSA' in member name 'LookupWrapper.GetAllKSA(bool)' by changing it to 'Ksa'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllNoteStatuses(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="108">Change 'List&lt;NoteStatus&gt;' in 'LookupWrapper.GetAllNoteStatuses(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllOrganizationCodes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="120">Change 'OrganizationCodeCollection' in 'LookupWrapper.GetAllOrganizationCodes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllOrgChartTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="345">Change 'List&lt;OrgChartType&gt;' in 'LookupWrapper.GetAllOrgChartTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllOrgPositionStatusHistoryTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="363">Change 'List&lt;OrgPositionStatusHistoryType&gt;' in 'LookupWrapper.GetAllOrgPositionStatusHistoryTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllOrgPositionTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="321">Change 'List&lt;OrgPositionType&gt;' in 'LookupWrapper.GetAllOrgPositionTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllOrgWorkflowStatus(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="327">Change 'List&lt;OrgWorkflowStatus&gt;' in 'LookupWrapper.GetAllOrgWorkflowStatus(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllPayPlans(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="77">Change 'PayPlanCollection' in 'LookupWrapper.GetAllPayPlans(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllPositionStatusTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="102">Change 'List&lt;PositionStatusType&gt;' in 'LookupWrapper.GetAllPositionStatusTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllPositionTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="96">Change 'List&lt;PositionType&gt;' in 'LookupWrapper.GetAllPositionTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllPostionSensitivityType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="165">Change 'List&lt;PostionSensitivityType&gt;' in 'LookupWrapper.GetAllPostionSensitivityType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Postion" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="165">Correct the spelling of 'Postion' in member name 'LookupWrapper.GetAllPostionSensitivityType(bool)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllQualifications(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="188">Change 'List&lt;Qualification&gt;' in 'LookupWrapper.GetAllQualifications(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllQualificationTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="194">Change 'List&lt;QualificationType&gt;' in 'LookupWrapper.GetAllQualificationTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllReasonForSubmission(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="153">Change 'List&lt;ReasonForSubmission&gt;' in 'LookupWrapper.GetAllReasonForSubmission(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllRegions(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="182">Change 'List&lt;Region&gt;' in 'LookupWrapper.GetAllRegions(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllRoles(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="48">Change 'RoleCollection' in 'LookupWrapper.GetAllRoles(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllSeries(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="60">Change 'SeriesCollection' in 'LookupWrapper.GetAllSeries(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllSeriesByPayPlan(System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="66">Change 'SeriesCollection' in 'LookupWrapper.GetAllSeriesByPayPlan(bool, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="66">In member 'LookupWrapper.GetAllSeriesByPayPlan(bool, int)', correct the casing of 'ID' in parameter name 'payPlanID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllService(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="159">Change 'List&lt;Service&gt;' in 'LookupWrapper.GetAllService(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllSODParagraphOptions(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="231">Change 'List&lt;SODParagraphOptions&gt;' in 'LookupWrapper.GetAllSODParagraphOptions(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="231">Correct the casing of 'SOD' in member name 'LookupWrapper.GetAllSODParagraphOptions(bool)' by changing it to 'Sod'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllStaffingObjectType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="250">Change 'List&lt;StaffingObjectType&gt;' in 'LookupWrapper.GetAllStaffingObjectType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllStandaloneStaffingObjectType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="256">Change 'List&lt;StaffingObjectType&gt;' in 'LookupWrapper.GetAllStandaloneStaffingObjectType(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllStates(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="369">Change 'List&lt;State&gt;' in 'LookupWrapper.GetAllStates(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllSupervisoryStatus(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="381">Change 'List&lt;SupervisoryStatus&gt;' in 'LookupWrapper.GetAllSupervisoryStatus(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllTaskStatements(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="303">Change 'List&lt;TaskStatement&gt;' in 'LookupWrapper.GetAllTaskStatements(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllTaskStatementsNotInSeriesGradeKSA(System.Boolean,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">Change 'List&lt;TaskStatement&gt;' in 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">In member 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)', correct the casing of 'ID' in parameter name 'gradeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">In member 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)', correct the casing of 'ID' in parameter name 'seriesID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="KSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">Correct the casing of 'KSA' in member name 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)' by changing it to 'Ksa'.</Issue>
            </Message>
            <Message Id="KSAID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">In member 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)', correct the casing of 'KSAID' in parameter name 'KSAID' by changing it to 'ksaid'.</Issue>
            </Message>
            <Message Id="KSAID" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">Parameter 'KSAID' of 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="gradeID" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">Parameter 'gradeID' of 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="seriesID" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="309">Parameter 'seriesID' of 'LookupWrapper.GetAllTaskStatementsNotInSeriesGradeKSA(bool, int, int, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllToolTips(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="211">Change 'List&lt;ToolTip&gt;' in 'LookupWrapper.GetAllToolTips(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllUsersByOrganizationCodeSearch(System.Boolean,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="141">Change 'UserCollection' in 'LookupWrapper.GetAllUsersByOrganizationCodeSearch(bool, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="141">In member 'LookupWrapper.GetAllUsersByOrganizationCodeSearch(bool, int, int)', correct the casing of 'ID' in parameter name 'regionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="142">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LookupWrapper.GetAllUsersByOrganizationCodeSearch(bool, int, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllWorkflowStatuses(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="114">Change 'List&lt;WorkflowStatus&gt;' in 'LookupWrapper.GetAllWorkflowStatuses(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllWorkScheduleTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="333">Change 'List&lt;WorkScheduleType&gt;' in 'LookupWrapper.GetAllWorkScheduleTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCareerLadderPDTypeGrades(System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="243">Change 'CareerLadderPDTypeGradeCollection' in 'LookupWrapper.GetCareerLadderPDTypeGrades(bool, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="243">In member 'LookupWrapper.GetCareerLadderPDTypeGrades(bool, int)', correct the casing of 'ID' in parameter name 'careerLadderPDTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="244">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LookupWrapper.GetCareerLadderPDTypeGrades(bool, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCareerLadderPDTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="237">Change 'CareerLadderPDTypeCollection' in 'LookupWrapper.GetCareerLadderPDTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDistinguishingValueScale(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="284">Change 'DistinguishingValueScaleCollection' in 'LookupWrapper.GetDistinguishingValueScale(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImportanceScale(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="272">Change 'ImportanceScaleCollection' in 'LookupWrapper.GetImportanceScale(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetJQRatingScale(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="290">Change 'JQRatingScaleCollection' in 'LookupWrapper.GetJQRatingScale(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNeedAtEntryScale(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="278">Change 'NeedAtEntryCollection' in 'LookupWrapper.GetNeedAtEntryScale(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganizationCodesByRegion(System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="126">Change 'OrganizationCodeCollection' in 'LookupWrapper.GetOrganizationCodesByRegion(bool, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="126">In member 'LookupWrapper.GetOrganizationCodesByRegion(bool, int)', correct the casing of 'ID' in parameter name 'regionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="127">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LookupWrapper.GetOrganizationCodesByRegion(bool, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganizationCodesByRegionLevel(System.Boolean,System.Int32,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="131">Change 'OrganizationCodeCollection' in 'LookupWrapper.GetOrganizationCodesByRegionLevel(bool, int, int, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="131">In member 'LookupWrapper.GetOrganizationCodesByRegionLevel(bool, int, int, bool)', correct the casing of 'ID' in parameter name 'levelID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="131">In member 'LookupWrapper.GetOrganizationCodesByRegionLevel(bool, int, int, bool)', correct the casing of 'ID' in parameter name 'regionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="132">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'LookupWrapper.GetOrganizationCodesByRegionLevel(bool, int, int, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrganizationCodesByUser(System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="136">Change 'OrganizationCodeCollection' in 'LookupWrapper.GetOrganizationCodesByUser(bool, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="136">In member 'LookupWrapper.GetOrganizationCodesByUser(bool, int)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="137">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'LookupWrapper.GetOrganizationCodesByUser(bool, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrgChartPositionGroupTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="351">Change 'List&lt;OrgPositionGroupType&gt;' in 'LookupWrapper.GetOrgChartPositionGroupTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrgChartPositionPlacementTypes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="357">Change 'List&lt;OrgPositionPlacementType&gt;' in 'LookupWrapper.GetOrgChartPositionPlacementTypes(bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPayPlanSeries(System.Boolean,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="147">Change 'SeriesCollection' in 'LookupWrapper.GetPayPlanSeries(bool, params object[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="147">In method 'LookupWrapper.GetPayPlanSeries(bool, params object[])', correct the spelling of 'param' in parameter name 'paramList' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSeriesOPMTitle(System.Boolean,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="170">Change 'SeriesOPMTitleCollection' in 'LookupWrapper.GetSeriesOPMTitle(bool, params object[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="OPM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="170">Correct the casing of 'OPM' in member name 'LookupWrapper.GetSeriesOPMTitle(bool, params object[])' by changing it to 'Opm'.</Issue>
            </Message>
            <Message Id="paramlist" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="LookupWrapper.cs" Line="170">In method 'LookupWrapper.GetSeriesOPMTitle(bool, params object[])', correct the spelling of 'paramlist' in parameter name 'paramlist' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValidationWrapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetRulesetNames(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="77">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'ValidationWrapper.GetRulesetNames(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPDvalid(HCMS.Business.PD.PositionDescription,PDChoiceType,PDStatus,enumRole,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="22">Consider a design that does not require that 'errormsg' be a reference parameter.</Issue>
            </Message>
            <Message Id="Dvalid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="22">Correct the spelling of 'Dvalid' in member name 'ValidationWrapper.IsPDvalid(PositionDescription, PDChoiceType, PDStatus, enumRole, ref string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="errormsg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="22">In method 'ValidationWrapper.IsPDvalid(PositionDescription, PDChoiceType, PDStatus, enumRole, ref string)', correct the spelling of 'errormsg' in parameter name 'errormsg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="currentRuleSetName" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="25">'ValidationWrapper.IsPDvalid(PositionDescription, PDChoiceType, PDStatus, enumRole, ref string)' declares a variable, 'currentRuleSetName', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateCreateNewPD(HCMS.Business.PD.PositionDescription,PDStatus,enumRole,System.String&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Concat(System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="58">'ValidationWrapper.ValidateCreateNewPD(PositionDescription, PDStatus, enumRole, ref string)' calls 'string.Concat(string, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="currentRole" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="43">Parameter 'currentRole' of 'ValidationWrapper.ValidateCreateNewPD(PositionDescription, PDStatus, enumRole, ref string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="errormsg" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="43">Parameter 'errormsg' of 'ValidationWrapper.ValidateCreateNewPD(PositionDescription, PDStatus, enumRole, ref string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidatePD(HCMS.Business.PD.PositionDescription,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="isvalid" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="90">'ValidationWrapper.ValidatePD(PositionDescription, string)' declares a variable, 'isvalid', of type 'bool', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-10-02 19:13:44Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\HCMS\HCMS.WebFramework\Site\Wrappers" File="ValidationWrapper.cs" Line="95">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ValidationWrapper.ValidatePD(PositionDescription, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
   <Name>Collections should implement generic interface</Name>
   <Description>Non-generic strongly typed collections should implement one of the generic collection interfaces. This will allow better integration of the collection with generic API.</Description>
   <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182132.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="StringCreation">{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Resolution>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="NotFlagsNoZeroValue">Add a member to {0} that has a value of zero with a suggested name of 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036">
   <Name>Override methods on comparable types</Name>
   <Description>Types that implement IComparable should redefine Equals and comparison operators to keep the meanings of less than, greater than, and equals consistent throughout the type.</Description>
   <Resolution Name="Equals">{0} should override Equals since it implements IComparable.</Resolution>
   <Resolution Name="Operator">{0} should define operator '{1}' since it implements IComparable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182163.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
   <Name>Properties should not be write only</Name>
   <Description>Write-only properties usually indicate a flawed design.</Description>
   <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182165.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
